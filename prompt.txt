Build a Python program that generates an optimal class schedule for a dance studio. The data comes from an Excel file named ./data/schedule-data.xlsx. The Excel file with three sheets:
1. classes: contains class_name, style, level, age_start, age_end, duration (in hours), preferred_days, preferred_time_ranges, preferred_rooms, preferred_teachers
2. teachers: contains teacher_name, availability
3. rooms: contains room_name, availability, and group (to define rooms with accordion walls that cannot be used simultaneously)

The program should:
1. Load the data from the Excel file
2. Break the day into 15-minute time slots (e.g., 15:15 to 21:00)
3. Assign each class a teacher, room, day, and start time, respecting:
- Class duration and time preference windows
- Room and teacher availability
- Room group exclusivity (e.g., if Room 1+2 is used, Room 1 and 2 cannot be used at the same time)
- Only assign classes to one of their preferred rooms and teachers
- Output the final schedule to an Excel or CSV file

Use the Google OR-Tools CP-SAT solver to enforce constraints and find a feasible schedule. Organize the code into clear functions or modules for:
- Data loading
- Constraint modeling
- Solving
- Output formatting

Availability is specified as day and time ranges formatted like: Monday:15:15-21:00,Tuesday:15:15-21:00,...
Multiple day entries are comma-separated, and each follows the Day:Start-End format.
Cases where no feasible solution exists with the given constraints should report that no feasible solution exists. Do not automatically relax constraints. We want to catch infeasibility explicitly so the studio can review their inputs and make adjustments (e.g., loosen time preferences or teacher limits).
For the initial version, focus on finding any feasible schedule.
Later versions may optimize for:
- Minimizing the number of days teachers are scheduled
- Maximizing room utilization
- Prioritizing early time slots for younger students
An Excel file (.xlsx) is preferred, with the name "schedule" plus timestamp. The Excel file should have at least one tab showing:
- Class name
- Assigned room
- Assigned teacher
- Day
- Start time
- End time
A separate sheet grouping by room or day would be a bonus but not required in v1.

For now, no additional constraints.
- Future enhancements may include:
- Minimum break time between classes for teachers
- Setup or cleanup time for certain styles or room transitions
- Avoiding back-to-back classes in different rooms for the same teacher
